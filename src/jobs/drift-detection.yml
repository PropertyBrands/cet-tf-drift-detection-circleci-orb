description: "Run terragrunt run-all plan and send SES email on drift/failure"
circleci_ip_ranges: true
parameters:
  # Deployment details
  region:
    type: string
  account_type:
    type: string
  environment:
    type: string
  account_id:
    type: string

  # Repo structure + AWS role name
  deployments_root:
    type: string
    default: "deployments"
  role_name:
    type: string
  
  # Container image
  terragrunt_image:
    type: string
    default: "alpine/terragrunt:1.12.2"

  # Terragrunt exclusions
  tg_queue_exclude_dirs:
    description: "Comma-separated list of dirs to exclude from run-all"
    type: string
    default: ""

  # Email / SES
  drift_email_to:
    type: string
  drift_email_from:
    type: string
  drift_email_from_name:
    type: string
    default: "Terraform Drift Detection"
  ses_region:
    type: string

  # DRY RUN capability to test parameter/orb
  dry_run:
    type: boolean
    default: true

executor:
  name: terragrunt
  image: << parameters.terragrunt_image >>

steps:
  - checkout

  - aws-cli/setup:
      role_arn: arn:aws:iam::<< parameters.account_id >>:role/<< parameters.role_name >>
      region: << parameters.region >>

  - install-sops
  - install-misc

  - run:
      name: Dry run â€“ print all inputs
      command: |
        echo "drift-detection inputs:"
        echo "  region:                << parameters.region >>"
        echo "  account_type:          << parameters.account_type >>"
        echo "  environment:           << parameters.environment >>"
        echo "  account_id:            << parameters.account_id >>"
        echo "  deployments_root:      << parameters.deployments_root >>"
        echo "  role_name:             << parameters.role_name >>"
        echo "  terragrunt_image:      << parameters.terragrunt_image >>"
        echo "  tg_queue_exclude_dirs: << parameters.tg_queue_exclude_dirs >>"
        echo "  drift_email_to:        << parameters.drift_email_to >>"
        echo "  drift_email_from:      << parameters.drift_email_from >>"
        echo "  drift_email_from_name: << parameters.drift_email_from_name >>"
        echo "  ses_region:            << parameters.ses_region >>"
        echo "  dry_run:               << parameters.dry_run >>"
        # (Optional) signal whether SES creds exist in the context without leaking them
        if [ -n "${SES_LOGIN:-}" ]; then echo "  SES_LOGIN:             [set]"; else echo "  SES_LOGIN:             [unset]"; fi
        if [ -n "${SES_PASSWORD:-}" ]; then echo "  SES_PASSWORD:          [set]"; else echo "  SES_PASSWORD:          [unset]"; fi

  - run:
      name: Dry run gate
      command: |
        if [ "<< parameters.dry_run >>" = "true" ]; then
          echo "Dry run enabled; stopping before Terragrunt/SES steps."
          exit 0
        fi

  # Real Plan/Drift detection + SES notification upon dry-run false
